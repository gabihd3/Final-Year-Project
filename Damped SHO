#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Mar 21 13:55:08 2020

@author: gabriel
"""

import numpy as np
from scipy.integrate import solve_ivp
import matplotlib.pyplot as plt

#Initial Conditions
y0 = [0,
      1]
def sho(t,y):
    return(y[1],
           (-y[1]-16*y[0]))
    
t = np.linspace(0,15,10000)
solution = solve_ivp(sho,[0,10000],y0,t_eval=t)

plt.plot(t,solution.y[0])
plt.ylabel("Position")
plt.xlabel("Time")

plt.show()

markers_on = [-9000] #Add a mark on the line at a certain time
plt.plot(solution.y[0],solution.y[1], '->',markevery = markers_on, markersize=10)
plt.xlabel("Position")
plt.ylabel("Velocity")
plt.show()
